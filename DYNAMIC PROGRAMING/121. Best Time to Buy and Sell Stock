problem:https://leetcode.com/problems/best-time-to-buy-and-sell-stock/
best video explanation:https://youtu.be/34WE6kwq49U
brute force:
time :O(n^2)
space:O(n)
int maxProfit(vector<int>& price) {
       int n=price.size();
        int dp[n];
        int maxans=0;
        for(int  i=0;i<n;i++){
            int maxval=0;
            for(int j=i+1;j<n;j++){
                if(price[j]>price[i]){
                    maxval=max(maxval,price[j]);
                }
            }
            if(maxval==0)dp[i]=0;
            else{
                dp[i]=maxval-price[i];
            }
            maxans=max(maxans,dp[i]);
        }
        return maxans;
    }
********************************OPTIMISED CODE********************************************************
TIME:O(N)
SPACE:O(N)
int maxProfit(vector<int>& price) {
        int n=price.size();
        int maxans=0;
        int maxprofit=INT_MIN;
       int dp[n];
       
        for(int i=n-1;i>=0;i--){
            maxans=dp[i]=max(maxans,price[i]);
        }
        for(int i=0;i<n;i++){
            maxprofit=max(maxprofit,dp[i]-price[i]);
        }
        return maxprofit;
    }
