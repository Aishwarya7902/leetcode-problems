problem:https://leetcode.com/problems/house-robber/


*****************************RECURSIVE**************///GETTING TLE
class Solution {
public:
    int help(vector<int>& num,int n){
       
        if(n==0)return 0;
        if(n==1)return num[0];
       
        
        int mn=INT_MIN;
        
        return max(mn,max(help(num,n-1),num[n-1]+help(num,n-2)));
    }
    int rob(vector<int>& num) {
       return help(num,num.size()); 
    }
};

******************************************MEMOIZATION(TOP DOWN)*****************************/////GETTING TLE

class Solution {
public:
    int help(vector<int>& num,int n){
       
        if(n==0)return 0;
        if(n==1)return num[0];
         int dp[n+1];
        for(int i=0;i<=n;i++){
            dp[i]=-1;
        }
        if(dp[n]!=-1)return dp[n];
        int mn=INT_MIN;
        
        return dp[n]=max(mn,max(help(num,n-1),num[n-1]+help(num,n-2)));
    }
    int rob(vector<int>& num) {
       return help(num,num.size()); 
    }
};


********************************BOTTOM UP (TABULATION)****************************
