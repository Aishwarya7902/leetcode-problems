problem:https://leetcode.com/problems/merge-two-sorted-lists/
/*
brute force
using recursion
tc:O(n)
sc:O(1)
*/
 ListNode* mergeTwoLists(ListNode* l1, ListNode* l2) {
        if(l1==NULL){
        return l2;
    }
        if(l2==NULL){
        return l1;
    }
        if(l1->val>=l2->val){
            l2->next=mergeTwoLists(l1,l2->next);
        }
        else{
            l1->next=mergeTwoLists(l1->next,l2);
            l2=l1;
        }
        return l2;
    }
    
  /*
  USING TWO POINTER
  BEST EXPLAINATION:https://leetcode.com/problems/merge-two-sorted-lists/discuss/839266/C%2B%2B-solution-Iterative-and-recursion
  TC:
  SC:
  */
  ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {
        
        
        
        ListNode* ans = new ListNode();
        ListNode* dummy = ans;
       
        while(list1 && list2){
            if((list1->val)<=(list2->val)){
                 ans->next = new ListNode(list1->val);
                list1 = list1->next;
            }
           else {
                 ans->next = new ListNode(list2->val);
                 list2 = list2->next;
            }
           ans = ans->next; 
        }
        
            while(list1){
               ans->next = new ListNode(list1->val);
               list1 = list1->next;
               ans = ans->next;
            }
        
        
            while(list2){
              ans->next = new ListNode(list2->val);
            list2 = list2->next;
            ans = ans->next;
            }
        
     return dummy->next;
    }
