problem:https://leetcode.com/problems/longest-increasing-subsequence/submissions/
video:(brute force) https://youtu.be/KoenMWrZmZU
/*brute force
tc:O(n*2)
space:O(n)
pseudo code: 
1.we will take a dp vector of size as of nums and initialise with 1
2.start iterating from index 1
3.for every index traverse from i-1 index to 0th index
4.at every j update dp[i]=max(dp[i],dp[j]+1) it means ki ith index se agr jth index ka element chota hai then j jo subsequence leke aa raha hai ith index usme khud ko v jod lega
5.we will repeat step 4 for every j >=0  and is tarah for every i we will get max length
6.at every moment we will update our maxi so that we dont have to traverse again to find the maximum element
*/

class Solution {
public:
    int lengthOfLIS(vector<int>& nums) {
     vector<int>dp(nums.size(),1);
        int maxi=1;
        for(int i=1;i<nums.size();i++){
            for(int j=i-1;j>=0;j--){
                if(nums[i]>nums[j]){
               dp[i]=max(dp[i],dp[j]+1);  
                    maxi=max(maxi,dp[i]);
}
            }
}
return maxi;
    }
};


        
